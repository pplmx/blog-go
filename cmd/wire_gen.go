// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"github.com/gofiber/fiber/v2"
	"github.com/google/wire"
	"github.com/pplmx/blog-go/internal"
	"github.com/pplmx/blog-go/internal/controller"
	"github.com/pplmx/blog-go/internal/db"
	"github.com/pplmx/blog-go/internal/repository"
	"github.com/pplmx/blog-go/internal/service"
)

// Injectors from wire.go:

func NewApp() *fiber.App {
	gormDB := db.NewDBConn()
	postRepository := repository.NewPostRepository(gormDB)
	postService := service.NewPostService(postRepository)
	postController := controller.NewPostController(postService)
	commentRepository := repository.NewCommentRepository(gormDB)
	commentService := service.NewCommentService(commentRepository)
	commentController := controller.NewCommentController(commentService)
	tagRepository := repository.NewTagRepository(gormDB)
	tagService := service.NewTagService(tagRepository)
	tagController := controller.NewTagController(tagService)
	categoryRepository := repository.NewCategoryRepository(gormDB)
	categoryService := service.NewCategoryService(categoryRepository)
	categoryController := controller.NewCategoryController(categoryService)
	app := internal.NewFiberApp(postController, commentController, tagController, categoryController)
	return app
}

// wire.go:

var repositoryProviderSet = wire.NewSet(repository.NewCategoryRepository, repository.NewCommentRepository, repository.NewPostRepository, repository.NewTagRepository)

var serviceProviderSet = wire.NewSet(service.NewCategoryService, service.NewCommentService, service.NewPostService, service.NewTagService)

var controllerProviderSet = wire.NewSet(controller.NewCategoryController, controller.NewCommentController, controller.NewPostController, controller.NewTagController)

var providerSet = wire.NewSet(db.NewDBConn, internal.NewFiberApp, repositoryProviderSet,
	serviceProviderSet,
	controllerProviderSet,
)
